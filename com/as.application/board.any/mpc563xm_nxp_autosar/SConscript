import os
from building import *

cwd = GetCurrentDir()

Import('asenv')
ASROOT = asenv['ASROOT']

SelectCompilerCWCC()
asenv.Append(ASFLAGS=['-proc=56X'])
asenv.Append(CCFLAGS=['-proc=56X'])
asenv.Append(LINKFLAGS=['-proc=56X'])
asenv.Append(LINKFLAGS=['-srec','mpc56xx.s19','-sreceol','unix'])
asenv.Append(LINKFLAGS=['-m','_start'])
asenv.Append(LINKFLAGS=['-romaddr','0x0','-rambuffer','0x0','-gdwarf-2',
                        '-code_merging','all'])
asenv.Append(LINKFLAGS=['-map','build/mpc56xx/mpc56xx.map'])

# fork env for NXP AUTOSAR BSW
env = ForkEnv(asenv)
for flgs in ['-include','asmconfig.h']:
	env['CCFLAGS'].remove(flgs)

MODULES = ['ECUM','SCHM','MCU',
           'DET',
           'CLIB_STDIO_PRINTF',
           'ANYOS',
           'CAN','CANIF','PDUR','COM','COMM',
           'MPC5634M_MLQB80'
           ]

ARCH='none'
arch='mpc56xx'

if(asenv['MODULES'] is None):
    asenv['MODULES'] = MODULES
else:
    MODULES = asenv['MODULES']

asenv['ARCH'] = ARCH
asenv['arch'] = arch

if(os.getenv('NXPMCAL')):
    nxpmcal = os.getenv('NXPMCAL')
else:
    nxpmcal = 'C:/Freescale/AUTOSAR/MPC563XM_MCAL3.0_RTM_2.0.0_signed'

MKSymlink(nxpmcal, '%s/mcal'%(cwd))

objs = []

env.Append(CPPPATH=['%s/config/include'%(cwd)])
env.Append(CPPPATH=['%s/mcal/Base_TS_T2D14M20I0R0/include'%(cwd)])
env.Append(CPPPATH=['%s/mcal/MPC563XM_MCAL3.0_RTM_2.0.0_Integration_Application/cfg/include'%(cwd)])
env.Append(CPPPATH=['%s/mcal/MPC563XM_MCAL3.0_RTM_2.0.0_Integration_Application/include'%(cwd)])

if('CAN' in MODULES):
    objs += Glob('config/src/Can*.c')

if('DIO' in MODULES):
    objs += Glob('config/src/Dio*.c')

if('MCU' in MODULES):
    env.Append(CPPPATH=['%s/mcal/Mcu_TS_T2D14M20I0R0/include'%(cwd)])
    objs += Glob('config/src/Mcu*.c')
    objs += Glob('mcal/Mcu_TS_T2D14M20I0R0/src/*.c')

if('SCHM' in MODULES):
    env.Append(CPPPATH=['%s/mcal/SchM_TS_T2D14M20I0R0/include'%(cwd)])
    objs += Glob('config/src/SchM*.c')

if('PORT' in MODULES):
    objs += Glob('config/src/Port*.c')

objs = env.Object(objs)

if('MPC5634M_MLQB80' in MODULES):
    srcs = Glob('MPC5634M_MLQB80/Project/src/*.c')
    SrcRemove(srcs, ['main.c','MPC55xx_init_debug.c'])
    objs += srcs
    asenv.Append(LINKFLAGS=['-lcf','%s/MPC5634M_MLQB80/Project/lcf/MPC5634M_MLQB80.lcf'%(cwd)])
    asenv.Append(CPPPATH=['%s/MPC5634M_MLQB80/Project/src'%(cwd)])
    MKSymlink('%s/MPC5634M_MLQB80/Project/src/MPC5634M_MLQB80.h'%(cwd),
              '%s/MPC5634M_MLQB80/Project/src/mpc56xx.h'%(cwd))

Return('objs')
